name: Build and Deploy to Firebaseon:  push:    branches:      - mainjobs:  create-env:    runs-on: ubuntu-latest    steps:      - name: Make env_file        uses: SpicyPizza/create-envfile@v2.0        with:          envkey_F_KEY: ${{ secrets.F_KEY }}          envkey_APP_ID: ${{ secrets.APP_ID }}          directory: './'          file_name: .env      - name: Display structure of downloaded files        run: ls -la      - name: Print .env file content        run: cat .env      - name: Install dotenv        run: npm install dotenv dotenv-expand      - name: Check if .env file exists        run: |          if [ -f ".env" ]; then            echo ".env file exists"            cat .env          else            echo "‚ö†Ô∏è .env file is missing!"            exit 1          fi      - name: Find .env file        run: |          echo "üîç Searching for .env file..."          env_file=$(find $GITHUB_WORKSPACE -name ".env" 2>/dev/null | head -n 1)          if [ -z "$env_file" ]; then            echo "‚ö†Ô∏è No .env file found!"            exit 1          else            echo "‚úÖ .env file found at: $env_file"            echo "ENV_FILE=$env_file" >> $GITHUB_ENV          fi      - name: Load environment variables        uses: actions/github-script@v7        env:          DOTENV: "/home/runner/work/remix-portfolio/remix-portfolio/.env"        with:          script: |            const fs = require('fs');            const dotenv = require('dotenv');            const dotenvExpand = require('dotenv-expand');                  const envFile = process.env.DOTENV;            console.log(`‚úÖ Using .env file at: ${envFile}`);                  try {            const envConfig = dotenv.parse(fs.readFileSync(envFile));                        // Fix l·ªói "dotenvExpand is not a function"            if (typeof dotenvExpand === 'function') {            dotenvExpand(envConfig);            } else if (dotenvExpand && dotenvExpand.expand) {            dotenvExpand.expand(envConfig);            } else {            throw new Error("dotenvExpand is not properly imported");            }                  for (const key in envConfig) {            core.exportVariable(key, envConfig[key]);            console.log(`${key}=${envConfig[key]}`);            }            } catch (error) {              console.error(`‚ùå Error loading .env: ${error.message}`);            }      - name: Check if .env file before upload        run: |          if [ -f ".env" ]; then            echo ".env file exists"            cat .env          else            echo "‚ö†Ô∏è .env file is missing!"            exit 1          fi      - name: Upload artifact        uses: actions/upload-artifact@v4        env:          DOTENV: "/home/runner/work/remix-portfolio/remix-portfolio/.env"        with:          name: env          path: ${{ env.DOTENV }}          if-no-files-found: error  build:    needs: create-env    runs-on: ubuntu-latest    steps:      - name: Checkout repository        uses: actions/checkout@v4      - name: Setup Node.js        uses: actions/setup-node@v4        with:          node-version: '20'      - name: Install package        run: npm install      - name: Build        run: npm run build      - name: Upload artifact        uses: actions/upload-artifact@v4        with:          name: build          path: build  deploy:    needs: build    runs-on: ubuntu-latest    steps:      - name: Checkout repository        uses: actions/checkout@v4      - name: Setup Node.js        uses: actions/setup-node@v4        with:          node-version: '20'      - name: Get artifact        uses: actions/download-artifact@v4        with:          name: build      - name: Get env        uses: actions/download-artifact@v4        with:          name: env      - name: Display structure of downloaded files        run: ls -R      - name: Install CLI        run: npm install -g firebase-tools      - name: Deploy to Firebase        env:          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}        run: firebase deploy